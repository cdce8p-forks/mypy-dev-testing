name: Tag version

on:
  workflow_dispatch:
    inputs:
      name:
        type: string
        required: true
        default: 1.18.0a10
      beta:
        description: "Beta release"
        type: boolean
        default: false
      ref:
        description: "Git ref"
        type: string
        required: true
        default: origin/master

jobs:
  tag_version:
    name: Tag new mypy-dev version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v6
        name: Install Python
        with:
          python-version: "3.13"
      - uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          permission-contents: write # push branch to Github
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      - name: Set git config
        run: |
          git config --global user.name "${{ vars.BOT_NAME }}"
          git config --global user.email "${{ vars.BOT_EMAIL }}"
      - name: Fetch and checkout
        env:
          GIT_ADVICE: 0
        run: |
          git -C mypy fetch origin -t master
          git -C mypy checkout ${{ inputs.ref }}
      - name: Get new tag version
        id: new-tag
        run: |
          if [[ "${{ inputs.beta }}" == 'true' ]]; then
            args="--beta"
          fi
          next_version=$(python scripts/next_version.py ${args})
          echo "Next version: ${next_version}"
          echo "next_version=${next_version}" >> $GITHUB_OUTPUT
      - name: Commit and push
        if: false
        run: |
          git add --update
          git commit -m "Update mypy commit"
          tag_name="${{ inputs.name }}"
          git tag "${tag_name}"  # TODO <= !!
          git push origin main "${tag_name}"
